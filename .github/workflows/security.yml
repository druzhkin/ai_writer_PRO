name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 1 * * 1'  # Run weekly on Monday at 1 AM

jobs:
  backend-security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install security tools
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit semgrep

    - name: Run safety check
      working-directory: ./backend
      run: |
        safety check --json --output safety-report.json || true

    - name: Run bandit security scan
      working-directory: ./backend
      run: |
        bandit -r app -f json -o bandit-report.json || true

    - name: Run semgrep security scan
      working-directory: ./backend
      run: |
        semgrep --config=auto --json --output=semgrep-report.json app/ || true

    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: backend-security-results
        path: |
          ./backend/safety-report.json
          ./backend/bandit-report.json
          ./backend/semgrep-report.json

  frontend-security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run npm audit
      working-directory: ./frontend
      run: |
        npm audit --audit-level=moderate --json > audit-report.json || true

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --json-file-output=snyk-report.json
      continue-on-error: true

    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: frontend-security-results
        path: |
          ./frontend/audit-report.json
          ./frontend/snyk-report.json

  container-security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker images
      run: |
        docker build -t ai-writer-pro-backend:test ./backend
        docker build -t ai-writer-pro-frontend:test ./frontend

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ai-writer-pro-backend:test'
        format: 'sarif'
        output: 'trivy-backend-results.sarif'

    - name: Run Trivy vulnerability scanner for frontend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ai-writer-pro-frontend:test'
        format: 'sarif'
        output: 'trivy-frontend-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-backend-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-frontend-results.sarif'

    - name: Upload container security results
      uses: actions/upload-artifact@v3
      with:
        name: container-security-results
        path: |
          trivy-backend-results.sarif
          trivy-frontend-results.sarif

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  secrets-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
